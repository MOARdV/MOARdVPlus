PART
{
	name = MdV_FASAApollo_CM_parachutes
	module = Part
	author = DennyTX/Frizzank

	// --- asset parameters ---

	rescaleFactor = 1

	MODEL
	{
		model = MOARdVPlus/MAS_FASA_Apollo/Parts/FASAApollo_Parachutes
		scale = 0.64, 0.64, 0.64
		rotation = 0, 0, 0	
	}

	// --- node definitions ---
	// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z, size
	node_stack_top = 0.0, 0.28, 0.0, 0.0, 1.0, 0.0, 1
	node_stack_bottom = 0.0, 0.28, 0.0, 0.0, -1.0, 0.0, 1


	// --- FX definitions ---
	sound_parachute_open = activate
	sound_parachute_single = deploy


	// --- editor parameters ---
	TechRequired = landing
	entryCost = 4600
	cost = 1200
	category = Utility
	subcategory = 0
	manufacturer = FASA
	title = MAS FASA Apollo CM Parachutes
	description = Apollo CM triple parachutes. Place the parachutes, top cover, then the docking port.

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,0,0

	// --- standard part parameters ---
	mass = 0.25
	dragModelType = default
	angularDrag = 2
	crashTolerance = 12
	maxTemp = 2500

	breakingForce = 100
	breakingTorque = 50

	stageOffset = -1
	ActivatesEvenIfDisconnected = true
	bodyLiftMultiplier = 0
	bulkheadProfiles = size2
	stagingIcon = PARACHUTES

	MODULE
	{
		name = ModuleParachute
		invertCanopy = true
		autoCutSpeed = 0.2
		capName = Cap
		canopyName = Canopy
		semiDeployedAnimation = Apollo_Chute_Semi
		fullyDeployedAnimation = Apollo_Chute_Full
		stowedDrag = 0.22
		semiDeployedDrag = 3
		fullyDeployedDrag = 600
		minAirPressureToOpen = 0.04
		clampMinAirPressure = 0.04
		deployAltitude = 1200
		deploymentSpeed = 0.12
		semiDeploymentSpeed = 0.5
		chuteMaxTemp = 1200
	}
	MODULE
	{
		name = ModuleDragModifier
		dragCubeName = SEMIDEPLOYED
		dragModifier = 0.67
	}
	MODULE
	{
		name = ModuleDragModifier
		dragCubeName = DEPLOYED
		dragModifier = 25
	}

	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = False
		situationMask = 8
		CONSTRAINT
		{
			type = ATMOSPHERE
			value = True
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = DENSITY
			test = GT
			value = 0.2
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = DENSITY
			test = GT
			value = 0.1
			prestige = Significant
		}
		CONSTRAINT
		{
			type = DENSITY
			test = GT
			value = 0.02
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 1000
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 300
			body = _Home
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1000
			body = _NotHome
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
	}
}
